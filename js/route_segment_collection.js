// Generated by CoffeeScript 1.6.3
(function() {
  Routes.RouteSegmentCollection = (function() {
    function RouteSegmentCollection(route_segments) {
      this._segments = route_segments;
    }

    RouteSegmentCollection.prototype.sum = function(f) {
      var s, x, _i, _len, _ref;
      s = 0;
      _ref = this._segments;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        s += f(x) || 0;
      }
      return s;
    };

    RouteSegmentCollection.prototype.miles = function() {
      return this.sum(function(x) {
        return x.miles();
      });
    };

    RouteSegmentCollection.prototype.elevation = function() {
      return this.sum(function(x) {
        return x.elevation();
      });
    };

    RouteSegmentCollection.prototype.reverse_elevation = function() {
      return this.sum(function(x) {
        return x.reverse_elevation();
      });
    };

    RouteSegmentCollection.prototype.start_point_id = function() {
      return this._segments[0].start_point_id();
    };

    RouteSegmentCollection.prototype.end_point_id = function() {
      return this._segments[this._segments.length - 1].end_point_id();
    };

    RouteSegmentCollection.prototype.reverse = function() {
      return this;
    };

    RouteSegmentCollection.prototype.components = function() {
      return this._segments;
    };

    RouteSegmentCollection.prototype.name = function(n) {
      if (n) {
        this._name = n;
        return this;
      }
      if (this._name) {
        return "<" + this._name + ">";
      }
    };

    RouteSegmentCollection.prototype.mappable = function() {
      return false;
    };

    return RouteSegmentCollection;

  })();

}).call(this);
