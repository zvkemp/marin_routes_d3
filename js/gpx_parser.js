// Generated by CoffeeScript 1.6.3
(function() {
  Routes.GPXParser = (function() {
    function GPXParser() {}

    GPXParser.prototype.no_op = function() {
      return null;
    };

    GPXParser.prototype.parse_gpx = function(datafile, feature_function, callback) {
      var _this = this;
      if (callback == null) {
        callback = this.no_op;
      }
      return d3.xml(datafile, 'application/xml', function(gpx) {
        var result;
        result = _this[feature_function](gpx);
        console.log(result);
        return callback(result);
      });
    };

    GPXParser.prototype.points = function(gpx) {
      var points, points_array, _fn, _i, _len, _ref,
        _this = this;
      points_array = [];
      _ref = gpx.getElementsByTagName('trk');
      _fn = function(points) {
        var point, _j, _len1, _ref1, _results;
        _ref1 = points.getElementsByTagName('trkpt');
        _results = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          point = _ref1[_j];
          _results.push((function(point) {
            return points_array.push({
              type: "Feature",
              geometry: {
                type: "Point",
                coordinates: [parseFloat(point.getAttribute('lon')), parseFloat(point.getAttribute('lat'))]
              }
            });
          })(point));
        }
        return _results;
      };
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        points = _ref[_i];
        _fn(points);
      }
      return points_array;
    };

    GPXParser.prototype.line_string = function(gpx) {
      var coordinates, points, _fn, _i, _len, _ref,
        _this = this;
      coordinates = [];
      _ref = gpx.getElementsByTagName('trk');
      _fn = function(points) {
        var point, _j, _len1, _ref1, _results;
        _ref1 = points.getElementsByTagName('trkpt');
        _results = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          point = _ref1[_j];
          _results.push((function(point) {
            return coordinates.push([parseFloat(point.getAttribute('lon')), parseFloat(point.getAttribute('lat'))]);
          })(point));
        }
        return _results;
      };
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        points = _ref[_i];
        _fn(points);
      }
      return {
        type: "LineString",
        coordinates: coordinates
      };
    };

    return GPXParser;

  })();

}).call(this);
